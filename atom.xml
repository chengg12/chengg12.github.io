<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chen&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-02-02T15:45:25.604Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Chen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>读《岛上书店》有感</title>
    <link href="http://yoursite.com/2019/05/19/%E3%80%8A%E5%B2%9B%E4%B8%8A%E4%B9%A6%E5%BA%97%E3%80%8B/"/>
    <id>http://yoursite.com/2019/05/19/《岛上书店》/</id>
    <published>2019-05-19T13:21:36.816Z</published>
    <updated>2020-02-02T15:45:25.604Z</updated>
    
    <content type="html"><![CDATA[<p>我每天都有奇奇怪怪的想法，每次就是想想算了，稀里糊涂的活到了现在。所以我之前存在的意义和之后存在的意义是什么？</p><a id="more"></a><p>这本书在一个月之前就开始看了，其实只要花上一个星期六的时间就可以看完，我却用了不知道多少个零零散散的时间。</p><p>一个小岛上书店老板的后半生，一个被遗弃的孩子，一个图书推销员。</p><p>一开始男主的妻子就因车祸离世，紧接着又丢了自己的值钱的书。感觉人生无望的时候收到了一个被遗弃的婴儿，在养孩子长大的同时爱上了一直来推销书的推销员，努力之后终成正果。正当大家都以以为幸福收场的时候，患上了绝症，无钱可医，这个时候又峰回路转的寻回了自己当初丢的那本书，卖掉书治病，然而并没有什么用。</p><p>“因为从心底害怕自己不值得被爱，我们独来独往，然而就是因为独来独往，才让我们以为自己不值得被爱。有一天，你不知道是什么时候，你会驱车上路。有一天，你不知道是什么时候，你会遇到他(她)。你会被爱，因为你今生第一次真正不再孤单。你会选择不再孤单下去。”</p><p>说的没错，但是好像遇到的那个人永远不会来一样，在她（他）来的路上，我已经把自己的希望慢慢的消磨殆尽了。</p><p>“独自生活的难处，在于不管弄出什么样的烂摊子，都不得不自己清理。不，独自生活的真正难处在于没人在乎你是否心烦意乱。<br>”</p><p>“一旦一个人在乎一件事，就发现自己不得不开始在乎一切事。”</p><p>真的，当我在乎起她的时候，一切打算把自己就这样毁掉的想法就完全的抛之脑后了。</p><p>同样的，一个人觉得一些对别人来说重要的事无所谓的时候，慢慢的所有的事都无所谓了，包括生命。</p><p>“没有人会漫无目的地旅行，那些迷路者是希望迷路。”</p><p>“我们在二十岁有共鸣的东西，到了四十岁的时候不一定能产生共鸣，反之亦然，书本如此，生活亦如此。”</p><p>可能我要到了四十岁才能和书的后半段有共鸣吧。</p><p>“总有那么一段时间，我们的人生陷入僵局，我们的内心沦为荒岛。”</p><p>“通过阅读，我们了解到自己并不孤单。”</p><p>越是阅读，越觉得孤单</p><p>“他不相信有什么“命中唯一”，世界上有千千万万的人，没有谁什么特别。”</p><p>“每个人的生命里，都有最艰难的那一年，将人生变得美好而辽阔。”</p><p>原来现在还不是最艰难的时候吗</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我每天都有奇奇怪怪的想法，每次就是想想算了，稀里糊涂的活到了现在。所以我之前存在的意义和之后存在的意义是什么？&lt;/p&gt;
    
    </summary>
    
      <category term="读后感" scheme="http://yoursite.com/categories/%E8%AF%BB%E5%90%8E%E6%84%9F/"/>
    
    
      <category term="摘录" scheme="http://yoursite.com/tags/%E6%91%98%E5%BD%95/"/>
    
      <category term="读后感" scheme="http://yoursite.com/tags/%E8%AF%BB%E5%90%8E%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>Old Time Rock &amp; Roll</title>
    <link href="http://yoursite.com/2018/12/23/18-12-23/"/>
    <id>http://yoursite.com/2018/12/23/18-12-23/</id>
    <published>2018-12-23T08:07:32.000Z</published>
    <updated>2018-12-23T08:11:57.213Z</updated>
    
    <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=1098827&auto=0&height=66"></iframe><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;86&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;id=
      
    
    </summary>
    
      <category term="音乐" scheme="http://yoursite.com/categories/%E9%9F%B3%E4%B9%90/"/>
    
    
      <category term="音乐" scheme="http://yoursite.com/tags/%E9%9F%B3%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>vmix20 pro 破解安装</title>
    <link href="http://yoursite.com/2018/12/14/vmix/"/>
    <id>http://yoursite.com/2018/12/14/vmix/</id>
    <published>2018-12-13T16:36:26.799Z</published>
    <updated>2019-05-19T13:12:37.152Z</updated>
    
    <content type="html"><![CDATA[<p>vmix Pro 20是一款来自澳大利亚的视频混合软件，可以完美支持Windows 7/8以及最新的Windows 10系统，其强大之处在于用电脑软件某种程度上代替了专业混合设备，支持多种视频格式，适用于演播室多通道摄像机切换及虚拟演播场景、网络直播，如今在很多需要用到投影仪的现场。<br><img src="https://upload.cc/i1/2018/12/23/qezkr3.png"></p><a id="more"></a><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>官网：<a href="https://www.vmix.com" target="_blank" rel="noopener">https://www.vmix.com</a><br>链接：<a href="https://pan.baidu.com/s/1XT4FVwV9eOTeoZDwP4G33g" target="_blank" rel="noopener">https://pan.baidu.com/s/1XT4FVwV9eOTeoZDwP4G33g</a><br>提取码：7xx5 </p><p>1，正常安装软件（为防止出现0值错误，不建议安装在C盘）</p><p>2，打开软件，选择“注册为免费的基本版”。随意填写邮箱地址，软件打开后关闭。</p><p>3，复制”0Harmony.dll”,”vMixTallyLightsLibrary.dll”到软件安装目录下，替换原文件。</p><p>4，使用windows防火墙禁止vMix.exe 和 vMix64.exe联网。<br>   <img src="https://upload.cc/i1/2018/12/23/xwpTBn.png"><br>   注意：你需要在防火墙入站规则和出站规则中禁止vMix.exe ， vMix64.exe联网。软件安装完成后会自动添加vMix的入站规则，默认是允许联网，我们将其修改为禁止联网保存。然后参照这篇文章新建出站规则，禁止vMix.exe ， vMix64.exe联网即可。</p><p>5，软件会自动变成Pro版本，并且可以完美使用Pro的所有功能。(关于里面显示有效期一年是永久为一年)</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;vmix Pro 20是一款来自澳大利亚的视频混合软件，可以完美支持Windows 7/8以及最新的Windows 10系统，其强大之处在于用电脑软件某种程度上代替了专业混合设备，支持多种视频格式，适用于演播室多通道摄像机切换及虚拟演播场景、网络直播，如今在很多需要用到投影仪的现场。&lt;br&gt;&lt;img src=&quot;https://upload.cc/i1/2018/12/23/qezkr3.png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="软件" scheme="http://yoursite.com/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="软件" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>node.js</title>
    <link href="http://yoursite.com/2018/08/31/node-js/"/>
    <id>http://yoursite.com/2018/08/31/node-js/</id>
    <published>2018-08-31T14:32:07.000Z</published>
    <updated>2018-09-27T14:29:11.274Z</updated>
    
    <content type="html"><![CDATA[<p>在了解到node.js之前我是先知道了Hexo,在搭建自己的博客的时候对node.js产生了兴趣，当时服务器语言正在学习php。</p><p>学习php的时候我用的是phpstudy,服务搭起来很简单。但是之后在linux系统上搭建服务时才发现原来还有那么多需要配置的东西。Apche或者Nginx开启Http服务器，mod_php5和php-cgi处理客户端的请求响应。</p><p>但是使用node.js直接就可以实现整个Http服务器。</p><a id="more"></a><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><p>node.js直接在server.js文件里配置</p><p>只要下载安装node.js,然后试试在cmd或者终端中node -v //查看node版本</p><p>一切没错，新建一个server.js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var http = require(&apos;http&apos;);//引入http模块</span><br><span class="line">http.createServer(function(req,res)&#123;</span><br><span class="line">res.writeHead(200,&#123;&quot;Content-Type&quot;;&quot;text/html;charset=&apos;utf-8&apos;&quot;&#125;);</span><br><span class="line">//发送http头部，状态200，文件类型html，字符集 utf-8</span><br><span class="line">res.wreite(&apos;Hello world!&apos;);//返回相应信息</span><br><span class="line">res.end();//结束响应</span><br><span class="line">&#125;).listen(8001);//监听8001端口</span><br></pre></td></tr></table></figure><p>运行 node server.js 然后浏览器访问 localhost:8001 就可以看到 Hello world!了</p><h1 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h1><p>在 Node 中模块分核心模块（Node提供的模块）和文件模块（用户编写的模块）</p><p>定义使用的模块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//定义一个tool.js的模块</span><br><span class="line">//模块定义</span><br><span class="line">var tools = &#123;</span><br><span class="line">sayHello: function()&#123;</span><br><span class="line">return &apos;helllo NodeJS&apos;;&#125;,</span><br><span class="line">add:function(x,y)&#123;</span><br><span class="line">return x+y;&#125;</span><br><span class="line">&#125;;</span><br><span class="line">//模块接口的暴露</span><br><span class="line">exports.sayHello = tools.sayHello;</span><br><span class="line">exports.add = tools.add;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var http = require(&apos;http&apos;);</span><br><span class="line"></span><br><span class="line">//引入自定义的 tools.js 模块</span><br><span class="line">var tools = require(&apos;./tools&apos;);</span><br><span class="line"></span><br><span class="line">tools.sayHello(); //使用模块</span><br></pre></td></tr></table></figure><h1 id="包"><a href="#包" class="headerlink" title="包"></a>包</h1><p>Nodejs中第三方模块由包组成，可以通过包来对一组具有相互依赖关系的模块进行统一管理。</p><p>完全符合CommonJs规范的包目录一般包含如下文件<br>. package.json:包描述文件。<br>. bin:用于存放可执行二进制文件的目录。<br>. lib:用于存放JavaScript代码的目录。<br>. doc:用于存放文档的目录。</p><p>可以通过npm下载各种各样的包。</p><h1 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">npm -v //查看 npm 版本</span><br><span class="line"></span><br><span class="line">npm install ModuleName //安装模块</span><br><span class="line"></span><br><span class="line">npm uninstall ModuleName //卸载模块</span><br><span class="line"></span><br><span class="line">npm list //查看当前目录下以安装的node包</span><br><span class="line"></span><br><span class="line">npm info ModuleName //查看模块的版本</span><br><span class="line"></span><br><span class="line">npm install ModuleName@1.1.0 //指定版本安装</span><br></pre></td></tr></table></figure><h1 id="package-js"><a href="#package-js" class="headerlink" title="package.js"></a>package.js</h1><p>package.js定义了这个项目所需要的各种模块，以及项目的配置信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm init</span><br><span class="line">npm init -yes //创建packsge.json</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">//package.json文件</span><br><span class="line">&#123;</span><br><span class="line">&quot;name&quot;:&quot;test&quot;,</span><br><span class="line">&quot;version&quot;:&quot;1.1.0&quot;,</span><br><span class="line">&quot;main&quot;:&quot;main.js&quot;,</span><br><span class="line">&quot;keywords&quot;:&#123;</span><br><span class="line">&quot;test&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;author&quot;:&quot;wade&quot;,</span><br><span class="line">&quot;license&quot;:&quot;MIT&quot;,</span><br><span class="line">&quot;dependencies&quot;:&#123;</span><br><span class="line">&quot;express&quot;:&quot;^4.10.1&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;devDependencies&quot;:&#123;</span><br><span class="line">&quot;jslint&quot;:&quot;^0.6.5&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//安装模块并把模块写入package.json</span><br><span class="line">npm install babel-cli --save-dev</span><br><span class="line">npm install 模块 --seave</span><br><span class="line">npm install 模块 -- save-dev</span><br></pre></td></tr></table></figure><p>使用 npm install node_module -save 自动更新 dependencies 字段值；<br>使用 npm install node_module -save_dev 自动更新devDepencies字段值；</p><p>dependencie 配置当前程序所依赖的其他包<br>devDependencie 配置当前程序所依赖的其他包，只会下载模块，而不下载这些模块的测试和文档框架</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&quot;dependencies&quot;:&#123;</span><br><span class="line">&quot;ejs&quot;:&quot;^2.3.4&quot;</span><br><span class="line">&quot;express&quot;:&quot;^4.13.3&quot;,</span><br><span class="line">&quot;formidable&quot;:&quot;^1.0.17&quot;</span><br><span class="line">&#125;</span><br><span class="line">/*</span><br><span class="line">^表示第一位版本号不变，后两位取最新</span><br><span class="line">~表示前两位不变，最后一位取最新</span><br><span class="line">*表示全部取最新</span><br><span class="line">*/</span><br></pre></td></tr></table></figure><h1 id="安装淘宝镜像"><a href="#安装淘宝镜像" class="headerlink" title="安装淘宝镜像"></a>安装淘宝镜像</h1><p><a href="http://www.npmjs.org" target="_blank" rel="noopener">http://www.npmjs.org</a> npm 包官网<br><a href="http://npm.taobao.org" target="_blank" rel="noopener">http://npm.taobao.org</a> 淘宝 npm 镜像官网</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=http://registry.mpm.taobao.org</span><br></pre></td></tr></table></figure><h1 id="fs模块"><a href="#fs模块" class="headerlink" title="fs模块"></a>fs模块</h1><h2 id="fs-stat-检测是文件还是目录"><a href="#fs-stat-检测是文件还是目录" class="headerlink" title="fs.stat 检测是文件还是目录"></a>fs.stat 检测是文件还是目录</h2><h2 id="fs-mkdir-创建目录"><a href="#fs-mkdir-创建目录" class="headerlink" title="fs.mkdir 创建目录"></a>fs.mkdir 创建目录</h2><h2 id="fs-writeFile-创建写入文件"><a href="#fs-writeFile-创建写入文件" class="headerlink" title="fs.writeFile 创建写入文件"></a>fs.writeFile 创建写入文件</h2><h2 id="fs-appendFile-追加文件"><a href="#fs-appendFile-追加文件" class="headerlink" title="fs.appendFile 追加文件"></a>fs.appendFile 追加文件</h2><h2 id="fs-readFile-读取文件"><a href="#fs-readFile-读取文件" class="headerlink" title="fs.readFile 读取文件"></a>fs.readFile 读取文件</h2><h2 id="fs-rename-重命名"><a href="#fs-rename-重命名" class="headerlink" title="fs.rename 重命名"></a>fs.rename 重命名</h2><h2 id="fs-rmdir-删除目录"><a href="#fs-rmdir-删除目录" class="headerlink" title="fs.rmdir 删除目录"></a>fs.rmdir 删除目录</h2><h2 id="fs-unlink-删除文件"><a href="#fs-unlink-删除文件" class="headerlink" title="fs.unlink 删除文件"></a>fs.unlink 删除文件</h2><h2 id="fs-createReadStream-从文件流中读取数据"><a href="#fs-createReadStream-从文件流中读取数据" class="headerlink" title="fs.createReadStream 从文件流中读取数据"></a>fs.createReadStream 从文件流中读取数据</h2><h2 id="fs-createWriteStream-写入文件"><a href="#fs-createWriteStream-写入文件" class="headerlink" title="fs.createWriteStream 写入文件"></a>fs.createWriteStream 写入文件</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在了解到node.js之前我是先知道了Hexo,在搭建自己的博客的时候对node.js产生了兴趣，当时服务器语言正在学习php。&lt;/p&gt;
&lt;p&gt;学习php的时候我用的是phpstudy,服务搭起来很简单。但是之后在linux系统上搭建服务时才发现原来还有那么多需要配置的东西。Apche或者Nginx开启Http服务器，mod_php5和php-cgi处理客户端的请求响应。&lt;/p&gt;
&lt;p&gt;但是使用node.js直接就可以实现整个Http服务器。&lt;/p&gt;
    
    </summary>
    
      <category term="服务器，后端" scheme="http://yoursite.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%8C%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="node.js" scheme="http://yoursite.com/tags/node-js/"/>
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>javascript console 函数使用</title>
    <link href="http://yoursite.com/2018/07/19/javascript-console-%E5%87%BD%E6%95%B0%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2018/07/19/javascript-console-函数使用/</id>
    <published>2018-07-19T14:41:41.000Z</published>
    <updated>2018-12-13T16:35:30.996Z</updated>
    
    <content type="html"><![CDATA[<p>在初学javascript的时候调试一直用的alert，但是随着学习的深入alert已经越来越不够用了。</p><p>按下F12就能看到Console的窗口，用来显示网页加载过程中产生的各类信息。</p><a id="more"></a><h1 id="五种常见方法"><a href="#五种常见方法" class="headerlink" title="五种常见方法"></a>五种常见方法</h1><p>最简单的就是console.log(),直接显示内容。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console.log(&quot;hello world&quot;);</span><br></pre></td></tr></table></figure></p><p>一般信息 console.info()、除错信息console.debug()、警告提示console.warn()、错误提示console.error()<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">console.info(&quot;info&quot;);</span><br><span class="line">console.debug(&quot;debug&quot;);</span><br><span class="line">console.warn(&quot;warn&quot;);</span><br><span class="line">console.warn(&quot;error&quot;);</span><br></pre></td></tr></table></figure></p><h1 id="console的占位符"><a href="#console的占位符" class="headerlink" title="console的占位符"></a>console的占位符</h1><p>字符(%s),整数(%d或%i),浮点数(%f),对象(%o),样式<a href="%c">css</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">console.log(&quot;%d年%d月%d日&quot;,2011,3,26);</span><br><span class="line">console.log(&quot;圆周率是%f&quot;,3.1415926);</span><br><span class="line"></span><br><span class="line">var chen = &#123;&#125; ;</span><br><span class="line">chen.name = &quot;chen&quot; ;</span><br><span class="line">chen.sex = &quot;men&quot;;</span><br><span class="line">console.log(&quot;%o&quot;,chen);</span><br></pre></td></tr></table></figure></p><h1 id="分组显示"><a href="#分组显示" class="headerlink" title="分组显示"></a>分组显示</h1><p>console.group() 和 console.groupEnd()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">console.group(&quot;1&quot;);</span><br><span class="line">　　　　console.log(&quot;1.1&quot;);</span><br><span class="line">　　　　console.log(&quot;1.2&quot;);</span><br><span class="line">console.groupEnd();</span><br><span class="line">console.group(&quot;2&quot;);</span><br><span class="line">　　　　console.log(&quot;2.1&quot;);</span><br><span class="line">　　　　console.log(&quot;2.2&quot;);</span><br><span class="line">console.groupEnd();</span><br></pre></td></tr></table></figure><h1 id="显示一个对象所有的属性和方法"><a href="#显示一个对象所有的属性和方法" class="headerlink" title="显示一个对象所有的属性和方法"></a>显示一个对象所有的属性和方法</h1><p>console.dir()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console.dir(chen);</span><br></pre></td></tr></table></figure><h1 id="显示网页某节点包含的Html-xml代码"><a href="#显示网页某节点包含的Html-xml代码" class="headerlink" title="显示网页某节点包含的Html/xml代码"></a>显示网页某节点包含的Html/xml代码</h1><p>console.dirxml()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var header = document.getElementById(&quot;header&quot;);</span><br><span class="line">console.dirxml(header);</span><br></pre></td></tr></table></figure><h1 id="追踪函数的调用轨迹"><a href="#追踪函数的调用轨迹" class="headerlink" title="追踪函数的调用轨迹"></a>追踪函数的调用轨迹</h1><p>console.trace()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function add(a,b)&#123;</span><br><span class="line">console.trace();</span><br><span class="line">return a+b;&#125;</span><br></pre></td></tr></table></figure><h1 id="计时"><a href="#计时" class="headerlink" title="计时"></a>计时</h1><p>console.time() 和 console.timeEnd()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">console.time(&quot;time1&quot;);</span><br><span class="line">for(var i=0;i&lt;1000;i++)&#123;</span><br><span class="line">for(var j=0;j&lt;1000;j++)&#123;&#125;</span><br><span class="line">　　&#125;</span><br><span class="line">console.time(&quot;time1&quot;);</span><br></pre></td></tr></table></figure><h1 id="性能分析"><a href="#性能分析" class="headerlink" title="性能分析"></a>性能分析</h1><p>console.profile()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">function Foo()&#123;</span><br><span class="line">　　for(var i=0;i&lt;10;i++)&#123;funcA(1000);&#125;</span><br><span class="line">　　funcB(10000);</span><br><span class="line">　　&#125;</span><br><span class="line">function funcA(count)&#123;</span><br><span class="line">　　for(var i=0;i&lt;count;i++)&#123;&#125;</span><br><span class="line">　　&#125;</span><br><span class="line">function funcB(count)&#123;</span><br><span class="line">　　for(var i=0;i&lt;count;i++)&#123;&#125;</span><br><span class="line">　　&#125;</span><br><span class="line">console.profile(&apos;性能分析&apos;);</span><br><span class="line">　　Foo();</span><br><span class="line">　　console.profileEnd();</span><br></pre></td></tr></table></figure><h1 id="更骚的console"><a href="#更骚的console" class="headerlink" title="更骚的console"></a>更骚的console</h1><p>现在console控制台的输出是支持css和图片的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//3d的文字</span><br><span class="line">console.log(&quot;%c3D Text&quot;,&quot; text-shadow: 0 1px 0 #ccc,0 2px 0 #c9c9c9,0 3px 0 #bbb,0 4px 0 #b9b9b9,0 5px 0 #aaa,0 6px 1px rgba(0,0,0,.1),0 0 5px rgba(0,0,0,.1),0 1px 3px rgba(0,0,0,.3),0 3px 5px rgba(0,0,0,.2),0 5px 10px rgba(0,0,0,.25),0 10px 10px rgba(0,0,0,.2),0 20px 20px rgba(0,0,0,.15);font-size:5em&quot;)</span><br><span class="line">//输出图片</span><br><span class="line">console.log(&quot;%c&quot;, &quot;padding:125px 300px;line-height:256px;background:url(&apos;https://upload.cc/i1/2018/07/14/tq43jm.jpg&apos;) no-repeat;&quot;);</span><br></pre></td></tr></table></figure><p>ps:F12查看效果</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在初学javascript的时候调试一直用的alert，但是随着学习的深入alert已经越来越不够用了。&lt;/p&gt;
&lt;p&gt;按下F12就能看到Console的窗口，用来显示网页加载过程中产生的各类信息。&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
      <category term="debug" scheme="http://yoursite.com/tags/debug/"/>
    
  </entry>
  
</feed>
