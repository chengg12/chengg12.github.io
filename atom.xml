<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chen&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-09-27T14:29:11.274Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Chen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>node.js</title>
    <link href="http://yoursite.com/2018/08/31/node-js/"/>
    <id>http://yoursite.com/2018/08/31/node-js/</id>
    <published>2018-08-31T14:32:07.000Z</published>
    <updated>2018-09-27T14:29:11.274Z</updated>
    
    <content type="html"><![CDATA[<p>在了解到node.js之前我是先知道了Hexo,在搭建自己的博客的时候对node.js产生了兴趣，当时服务器语言正在学习php。</p><p>学习php的时候我用的是phpstudy,服务搭起来很简单。但是之后在linux系统上搭建服务时才发现原来还有那么多需要配置的东西。Apche或者Nginx开启Http服务器，mod_php5和php-cgi处理客户端的请求响应。</p><p>但是使用node.js直接就可以实现整个Http服务器。</p><a id="more"></a><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><p>node.js直接在server.js文件里配置</p><p>只要下载安装node.js,然后试试在cmd或者终端中node -v //查看node版本</p><p>一切没错，新建一个server.js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var http = require(&apos;http&apos;);//引入http模块</span><br><span class="line">http.createServer(function(req,res)&#123;</span><br><span class="line">res.writeHead(200,&#123;&quot;Content-Type&quot;;&quot;text/html;charset=&apos;utf-8&apos;&quot;&#125;);</span><br><span class="line">//发送http头部，状态200，文件类型html，字符集 utf-8</span><br><span class="line">res.wreite(&apos;Hello world!&apos;);//返回相应信息</span><br><span class="line">res.end();//结束响应</span><br><span class="line">&#125;).listen(8001);//监听8001端口</span><br></pre></td></tr></table></figure><p>运行 node server.js 然后浏览器访问 localhost:8001 就可以看到 Hello world!了</p><h1 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h1><p>在 Node 中模块分核心模块（Node提供的模块）和文件模块（用户编写的模块）</p><p>定义使用的模块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//定义一个tool.js的模块</span><br><span class="line">//模块定义</span><br><span class="line">var tools = &#123;</span><br><span class="line">sayHello: function()&#123;</span><br><span class="line">return &apos;helllo NodeJS&apos;;&#125;,</span><br><span class="line">add:function(x,y)&#123;</span><br><span class="line">return x+y;&#125;</span><br><span class="line">&#125;;</span><br><span class="line">//模块接口的暴露</span><br><span class="line">exports.sayHello = tools.sayHello;</span><br><span class="line">exports.add = tools.add;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var http = require(&apos;http&apos;);</span><br><span class="line"></span><br><span class="line">//引入自定义的 tools.js 模块</span><br><span class="line">var tools = require(&apos;./tools&apos;);</span><br><span class="line"></span><br><span class="line">tools.sayHello(); //使用模块</span><br></pre></td></tr></table></figure><h1 id="包"><a href="#包" class="headerlink" title="包"></a>包</h1><p>Nodejs中第三方模块由包组成，可以通过包来对一组具有相互依赖关系的模块进行统一管理。</p><p>完全符合CommonJs规范的包目录一般包含如下文件<br>. package.json:包描述文件。<br>. bin:用于存放可执行二进制文件的目录。<br>. lib:用于存放JavaScript代码的目录。<br>. doc:用于存放文档的目录。</p><p>可以通过npm下载各种各样的包。</p><h1 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">npm -v //查看 npm 版本</span><br><span class="line"></span><br><span class="line">npm install ModuleName //安装模块</span><br><span class="line"></span><br><span class="line">npm uninstall ModuleName //卸载模块</span><br><span class="line"></span><br><span class="line">npm list //查看当前目录下以安装的node包</span><br><span class="line"></span><br><span class="line">npm info ModuleName //查看模块的版本</span><br><span class="line"></span><br><span class="line">npm install ModuleName@1.1.0 //指定版本安装</span><br></pre></td></tr></table></figure><h1 id="package-js"><a href="#package-js" class="headerlink" title="package.js"></a>package.js</h1><p>package.js定义了这个项目所需要的各种模块，以及项目的配置信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm init</span><br><span class="line">npm init -yes //创建packsge.json</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">//package.json文件</span><br><span class="line">&#123;</span><br><span class="line">&quot;name&quot;:&quot;test&quot;,</span><br><span class="line">&quot;version&quot;:&quot;1.1.0&quot;,</span><br><span class="line">&quot;main&quot;:&quot;main.js&quot;,</span><br><span class="line">&quot;keywords&quot;:&#123;</span><br><span class="line">&quot;test&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;author&quot;:&quot;wade&quot;,</span><br><span class="line">&quot;license&quot;:&quot;MIT&quot;,</span><br><span class="line">&quot;dependencies&quot;:&#123;</span><br><span class="line">&quot;express&quot;:&quot;^4.10.1&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;devDependencies&quot;:&#123;</span><br><span class="line">&quot;jslint&quot;:&quot;^0.6.5&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//安装模块并把模块写入package.json</span><br><span class="line">npm install babel-cli --save-dev</span><br><span class="line">npm install 模块 --seave</span><br><span class="line">npm install 模块 -- save-dev</span><br></pre></td></tr></table></figure><p>使用 npm install node_module -save 自动更新 dependencies 字段值；<br>使用 npm install node_module -save_dev 自动更新devDepencies字段值；</p><p>dependencie 配置当前程序所依赖的其他包<br>devDependencie 配置当前程序所依赖的其他包，只会下载模块，而不下载这些模块的测试和文档框架</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&quot;dependencies&quot;:&#123;</span><br><span class="line">&quot;ejs&quot;:&quot;^2.3.4&quot;</span><br><span class="line">&quot;express&quot;:&quot;^4.13.3&quot;,</span><br><span class="line">&quot;formidable&quot;:&quot;^1.0.17&quot;</span><br><span class="line">&#125;</span><br><span class="line">/*</span><br><span class="line">^表示第一位版本号不变，后两位取最新</span><br><span class="line">~表示前两位不变，最后一位取最新</span><br><span class="line">*表示全部取最新</span><br><span class="line">*/</span><br></pre></td></tr></table></figure><h1 id="安装淘宝镜像"><a href="#安装淘宝镜像" class="headerlink" title="安装淘宝镜像"></a>安装淘宝镜像</h1><p><a href="http://www.npmjs.org" target="_blank" rel="noopener">http://www.npmjs.org</a> npm 包官网<br><a href="http://npm.taobao.org" target="_blank" rel="noopener">http://npm.taobao.org</a> 淘宝 npm 镜像官网</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=http://registry.mpm.taobao.org</span><br></pre></td></tr></table></figure><h1 id="fs模块"><a href="#fs模块" class="headerlink" title="fs模块"></a>fs模块</h1><h2 id="fs-stat-检测是文件还是目录"><a href="#fs-stat-检测是文件还是目录" class="headerlink" title="fs.stat 检测是文件还是目录"></a>fs.stat 检测是文件还是目录</h2><h2 id="fs-mkdir-创建目录"><a href="#fs-mkdir-创建目录" class="headerlink" title="fs.mkdir 创建目录"></a>fs.mkdir 创建目录</h2><h2 id="fs-writeFile-创建写入文件"><a href="#fs-writeFile-创建写入文件" class="headerlink" title="fs.writeFile 创建写入文件"></a>fs.writeFile 创建写入文件</h2><h2 id="fs-appendFile-追加文件"><a href="#fs-appendFile-追加文件" class="headerlink" title="fs.appendFile 追加文件"></a>fs.appendFile 追加文件</h2><h2 id="fs-readFile-读取文件"><a href="#fs-readFile-读取文件" class="headerlink" title="fs.readFile 读取文件"></a>fs.readFile 读取文件</h2><h2 id="fs-rename-重命名"><a href="#fs-rename-重命名" class="headerlink" title="fs.rename 重命名"></a>fs.rename 重命名</h2><h2 id="fs-rmdir-删除目录"><a href="#fs-rmdir-删除目录" class="headerlink" title="fs.rmdir 删除目录"></a>fs.rmdir 删除目录</h2><h2 id="fs-unlink-删除文件"><a href="#fs-unlink-删除文件" class="headerlink" title="fs.unlink 删除文件"></a>fs.unlink 删除文件</h2><h2 id="fs-createReadStream-从文件流中读取数据"><a href="#fs-createReadStream-从文件流中读取数据" class="headerlink" title="fs.createReadStream 从文件流中读取数据"></a>fs.createReadStream 从文件流中读取数据</h2><h2 id="fs-createWriteStream-写入文件"><a href="#fs-createWriteStream-写入文件" class="headerlink" title="fs.createWriteStream 写入文件"></a>fs.createWriteStream 写入文件</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在了解到node.js之前我是先知道了Hexo,在搭建自己的博客的时候对node.js产生了兴趣，当时服务器语言正在学习php。&lt;/p&gt;
&lt;p&gt;学习php的时候我用的是phpstudy,服务搭起来很简单。但是之后在linux系统上搭建服务时才发现原来还有那么多需要配置的东西。Apche或者Nginx开启Http服务器，mod_php5和php-cgi处理客户端的请求响应。&lt;/p&gt;
&lt;p&gt;但是使用node.js直接就可以实现整个Http服务器。&lt;/p&gt;
    
    </summary>
    
      <category term="服务器，后端" scheme="http://yoursite.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%8C%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="node.js" scheme="http://yoursite.com/tags/node-js/"/>
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>javascript console 函数使用</title>
    <link href="http://yoursite.com/2018/07/19/javascript-console-%E5%87%BD%E6%95%B0%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2018/07/19/javascript-console-函数使用/</id>
    <published>2018-07-19T14:41:41.000Z</published>
    <updated>2018-07-24T15:54:38.733Z</updated>
    
    <content type="html"><![CDATA[<p>在初学javascript的时候调试一直用的alert，但是随着学习的深入alert已经越来越不够用了。</p><p>按下F12就能看到Console的窗口，用来显示网页加载过程中产生的各类信息。</p><a id="more"></a><h1 id="五种常见方法"><a href="#五种常见方法" class="headerlink" title="五种常见方法"></a>五种常见方法</h1><p>最简单的就是console.log(),直接显示内容。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console.log(&quot;hello world&quot;);</span><br></pre></td></tr></table></figure></p><p>一般信息 console.info()、除错信息console.debug()、警告提示console.warn()、错误提示console.error()<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">console.info(&quot;info&quot;);</span><br><span class="line">console.debug(&quot;debug&quot;);</span><br><span class="line">console.warn(&quot;warn&quot;);</span><br><span class="line">console.warn(&quot;error&quot;);</span><br></pre></td></tr></table></figure></p><h1 id="console的占位符"><a href="#console的占位符" class="headerlink" title="console的占位符"></a>console的占位符</h1><p>字符(%s),整数(%d或%i),浮点数(%f),对象(%o),样式<a href="%c">css</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">console.log(&quot;%d年%d月%d日&quot;,2011,3,26);</span><br><span class="line">console.log(&quot;圆周率是%f&quot;,3.1415926);</span><br><span class="line"></span><br><span class="line">var chen = &#123;&#125; ;</span><br><span class="line">chen.name = &quot;chen&quot; ;</span><br><span class="line">chen.sex = &quot;men&quot;;</span><br><span class="line">console.log(&quot;%o&quot;,chen);</span><br></pre></td></tr></table></figure></p><h1 id="分组显示"><a href="#分组显示" class="headerlink" title="分组显示"></a>分组显示</h1><p>console.group() 和 console.groupEnd()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">console.group(&quot;1&quot;);</span><br><span class="line">　　　　console.log(&quot;1.1&quot;);</span><br><span class="line">　　　　console.log(&quot;1.2&quot;);</span><br><span class="line">console.groupEnd();</span><br><span class="line">console.group(&quot;2&quot;);</span><br><span class="line">　　　　console.log(&quot;2.1&quot;);</span><br><span class="line">　　　　console.log(&quot;2.2&quot;);</span><br><span class="line">console.groupEnd();</span><br></pre></td></tr></table></figure><h1 id="显示一个对象所有的属性和方法"><a href="#显示一个对象所有的属性和方法" class="headerlink" title="显示一个对象所有的属性和方法"></a>显示一个对象所有的属性和方法</h1><p>console.dir()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console.dir(chen);</span><br></pre></td></tr></table></figure><h1 id="显示网页某节点包含的Html-xml代码"><a href="#显示网页某节点包含的Html-xml代码" class="headerlink" title="显示网页某节点包含的Html/xml代码"></a>显示网页某节点包含的Html/xml代码</h1><p>console.dirxml()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var header = document.getElementById(&quot;header&quot;);</span><br><span class="line">console.dirxml(header);</span><br></pre></td></tr></table></figure><h1 id="追踪函数的调用轨迹"><a href="#追踪函数的调用轨迹" class="headerlink" title="追踪函数的调用轨迹"></a>追踪函数的调用轨迹</h1><p>console.trace()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function add(a,b)&#123;</span><br><span class="line">console.trace();</span><br><span class="line">return a+b;&#125;</span><br></pre></td></tr></table></figure><h1 id="计时"><a href="#计时" class="headerlink" title="计时"></a>计时</h1><p>console.time() 和 console.timeEnd()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">console.time(&quot;time1&quot;);</span><br><span class="line">for(var i=0;i&lt;1000;i++)&#123;</span><br><span class="line">for(var j=0;j&lt;1000;j++)&#123;&#125;</span><br><span class="line">　　&#125;</span><br><span class="line">console.time(&quot;time1&quot;);</span><br></pre></td></tr></table></figure><h1 id="性能分析"><a href="#性能分析" class="headerlink" title="性能分析"></a>性能分析</h1><p>console.profile()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">function Foo()&#123;</span><br><span class="line">　　for(var i=0;i&lt;10;i++)&#123;funcA(1000);&#125;</span><br><span class="line">　　funcB(10000);</span><br><span class="line">　　&#125;</span><br><span class="line">function funcA(count)&#123;</span><br><span class="line">　　for(var i=0;i&lt;count;i++)&#123;&#125;</span><br><span class="line">　　&#125;</span><br><span class="line">function funcB(count)&#123;</span><br><span class="line">　　for(var i=0;i&lt;count;i++)&#123;&#125;</span><br><span class="line">　　&#125;</span><br><span class="line">console.profile(&apos;性能分析&apos;);</span><br><span class="line">　　Foo();</span><br><span class="line">　　console.profileEnd();</span><br></pre></td></tr></table></figure><h1 id="更骚的console"><a href="#更骚的console" class="headerlink" title="更骚的console"></a>更骚的console</h1><p>现在console控制台的输出是支持css和图片的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//3d的文字</span><br><span class="line">console.log(&quot;%c3D Text&quot;,&quot; text-shadow: 0 1px 0 #ccc,0 2px 0 #c9c9c9,0 3px 0 #bbb,0 4px 0 #b9b9b9,0 5px 0 #aaa,0 6px 1px rgba(0,0,0,.1),0 0 5px rgba(0,0,0,.1),0 1px 3px rgba(0,0,0,.3),0 3px 5px rgba(0,0,0,.2),0 5px 10px rgba(0,0,0,.25),0 10px 10px rgba(0,0,0,.2),0 20px 20px rgba(0,0,0,.15);font-size:5em&quot;)</span><br><span class="line">//输出图片</span><br><span class="line">console.log(&quot;%c&quot;, &quot;padding:125px 300px;line-height:256px;background:url(&apos;https://upload.cc/i1/2018/07/14/tq43jm.jpg&apos;) no-repeat;&quot;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在初学javascript的时候调试一直用的alert，但是随着学习的深入alert已经越来越不够用了。&lt;/p&gt;
&lt;p&gt;按下F12就能看到Console的窗口，用来显示网页加载过程中产生的各类信息。&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
      <category term="debug" scheme="http://yoursite.com/tags/debug/"/>
    
  </entry>
  
  <entry>
    <title>Dedecms 安装与目录详情</title>
    <link href="http://yoursite.com/2018/07/12/Dedecms/"/>
    <id>http://yoursite.com/2018/07/12/Dedecms/</id>
    <published>2018-07-12T14:33:19.000Z</published>
    <updated>2018-08-31T14:33:18.796Z</updated>
    
    <content type="html"><![CDATA[<p>Dedecms是我接触的第一个cms，也算是我职业生涯的开始。</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Dedecms是我接触的第一个cms，也算是我职业生涯的开始。&lt;/p&gt;
    
    </summary>
    
      <category term="CMS" scheme="http://yoursite.com/categories/CMS/"/>
    
      <category term="整站" scheme="http://yoursite.com/categories/CMS/%E6%95%B4%E7%AB%99/"/>
    
    
      <category term="CMS" scheme="http://yoursite.com/tags/CMS/"/>
    
      <category term="Dede" scheme="http://yoursite.com/tags/Dede/"/>
    
  </entry>
  
  <entry>
    <title>从零开始</title>
    <link href="http://yoursite.com/2018/07/11/Start%20from%20zero/"/>
    <id>http://yoursite.com/2018/07/11/Start from zero/</id>
    <published>2018-07-11T14:54:20.000Z</published>
    <updated>2018-08-03T13:40:50.583Z</updated>
    
    <content type="html"><![CDATA[<p>一切事情都是从决定做于不做开始的。<br>开始之前先复习一下那些听腻了的名词吧。</p><a id="more"></a><h1 id="前端常用的名词"><a href="#前端常用的名词" class="headerlink" title="前端常用的名词"></a>前端常用的名词</h1><h2 id="www-万维网"><a href="#www-万维网" class="headerlink" title="www/万维网"></a>www/万维网</h2><p>全称：World wide Web<br>分为Web客户端和Web服务器程序。WWW可以让Web客户端（常用浏览器）访问浏览Web服务器上的页面。是一个由许多互相链接的超文本组成的系统，通过互联网访问。<br>万维网不等同于互联网，万维网只是互联网所提供额度服务之一，是靠互联网运行的一项服务。</p><h2 id="HTML-超文本标记语言"><a href="#HTML-超文本标记语言" class="headerlink" title="HTML/超文本标记语言"></a>HTML/超文本标记语言</h2><p>全称：Hyper Text Markup Language<br>超级文本标记语言是标准通用标记语言下的一个应用，也是一种规范，一种标准，它通过标记符号来标记要显示的网页中的各个部分。</p><h2 id="CSS-层叠样式表"><a href="#CSS-层叠样式表" class="headerlink" title="CSS/层叠样式表"></a>CSS/层叠样式表</h2><p>全称：Casecading Style Sheets<br>是一种用来表现HTML或XML等文件样式的计算机语言。CSS不仅可以静态地修饰网页，还可以配合各种脚本语言动态地对网页各元素进行格式化。</p><h2 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h2><p>全称：Javascript<br>JavaScript一种直译式脚本语言，是一种动态类型、弱类型、基于原型的语言，内置支持类型。它的解释器被称为JavaScript引擎，为浏览器的一部分，广泛用于客户端的脚本语言，用来给HTML网页增加动态功能。</p><h2 id="absolute-path-绝对路径"><a href="#absolute-path-绝对路径" class="headerlink" title="absolute path/绝对路径"></a>absolute path/绝对路径</h2><p>包含完整地址的路径，可以通过它直接访问网页</p><h2 id="assessibility-可访问性"><a href="#assessibility-可访问性" class="headerlink" title="assessibility/可访问性"></a>assessibility/可访问性</h2><p>可用性的子集，指的是网站对各种用户的实用性</p><h2 id="anchor-锚"><a href="#anchor-锚" class="headerlink" title="anchor/锚"></a>anchor/锚</h2><p>在HTML文档中的标记，相当于书签</p><h2 id="argumnet-变量"><a href="#argumnet-变量" class="headerlink" title="argumnet/变量"></a>argumnet/变量</h2><h2 id="attribute-属性"><a href="#attribute-属性" class="headerlink" title="attribute/属性"></a>attribute/属性</h2><h2 id="baseline-基线"><a href="#baseline-基线" class="headerlink" title="baseline/基线"></a>baseline/基线</h2><p>文字显现行</p><h2 id="block-lexel-element-模块式的元素"><a href="#block-lexel-element-模块式的元素" class="headerlink" title="block-lexel element/模块式的元素"></a>block-lexel element/模块式的元素</h2><p>占据一个段落或者更多段落的元素</p><h2 id="breadcrumb-面包屑"><a href="#breadcrumb-面包屑" class="headerlink" title="breadcrumb/面包屑"></a>breadcrumb/面包屑</h2><p>一系列的超文本链接，使用户能够在网站结构图中向上回退一层或多层</p><h2 id="定义描述"><a href="#定义描述" class="headerlink" title="/定义描述"></a><dd>/定义描述</dd></h2><p>全称：definition description</p><p>用于解释一个定义词汇的段落</p><h2 id="定义列表"><a href="#定义列表" class="headerlink" title="/定义列表"></a><dl>/定义列表</dl></h2><p>全称：definition list</p><p>一个标识符，包含了所有标题和段落定义的完整列表</p><h2 id="定义词汇"><a href="#定义词汇" class="headerlink" title="/定义词汇"></a><dt>/定义词汇</dt></h2><p>全程：definition term</p><p>在定义列表中定义的一个单词或词组</p><h2 id="deprecated-过时标记符"><a href="#deprecated-过时标记符" class="headerlink" title="deprecated/过时标记符"></a>deprecated/过时标记符</h2><p>根据最新的HTML标准不再被支持的标识符</p><h2 id="descriptive-tag-描述性标识符"><a href="#descriptive-tag-描述性标识符" class="headerlink" title="descriptive tag/描述性标识符"></a>descriptive tag/描述性标识符</h2><p>用于描述文字的功能，而不是格式的标识符，也被称为逻辑标识符</p><h2 id="dithered-抖动色"><a href="#dithered-抖动色" class="headerlink" title="dithered/抖动色"></a>dithered/抖动色</h2><p>两种颜色混合在一起的网状光栅所组成的颜色</p><h1 id="待续…"><a href="#待续…" class="headerlink" title="待续…"></a>待续…</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一切事情都是从决定做于不做开始的。&lt;br&gt;开始之前先复习一下那些听腻了的名词吧。&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="基本概念" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/"/>
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="基本概念" scheme="http://yoursite.com/tags/%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>hello world</title>
    <link href="http://yoursite.com/2018/07/07/hello-world/"/>
    <id>http://yoursite.com/2018/07/07/hello-world/</id>
    <published>2018-07-06T17:15:14.000Z</published>
    <updated>2018-07-06T18:23:44.441Z</updated>
    
    <content type="html"><![CDATA[<p>生命不息折腾不止！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;生命不息折腾不止！&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
</feed>
